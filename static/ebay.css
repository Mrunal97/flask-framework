table,tr,td{
  border: 1px solid black;
  border-collapse: collapse;
  text-align:center;
   padding: 4px;
   width: 510px;
}
table{
height: 250px
}
#ast{
color:red;
}

select {
text-align-last:center;
}


#mySearch{
background-color:lightgrey;
border-radius:3px;
padding:5px;
padding-left:10px;
padding-right:10p x;
border:0px solid white; 
}

#mySearch:hover{
background-color: #4CAF50;
border:0px solid green;
color: #ffffff;
}

#myClear{
background-color:lightgrey;
border-radius:3px;
padding:5px;
padding-left:10px;
padding-right:10p x;
border:0px solid white; 
}
#myClear:hover{
background-color: #4CAF50;
border:0px solid green;
color: #ffffff;
}


from flask import Flask, request, render_template, jsonify
import json,urllib. request

app = Flask(__name__,static_folder = "static")
app.debug = True


@app.route("/ebay", methods=['GET', 'POST'])
def index():
    if request.method == "POST":
        multiple = []
        check="false"
        freeshipcheck="false"
        expshipcheck="false"
        #mykey=MrunalDe-MrunalAp-PRD-d2eb4905c-3e24c023
        keyword = request.form["Keyword"]
        priceFrom = request.form["from"]
        priceTo = request.form["to"]
        
        condition=request.form.getlist("cond")
        seller = request.form.get("ra ")
        if(seller=="Return Accepted"):
            check="true"
        
        
        shipping = request.form.getlist("ship")
        if(len(shipping)!=0):
            if(shipping[0]=="free"):
                freeshipcheck="true"
            if(shipping[0]=="expedited" or len(shipping)==2):
                expshipcheck="true"
        

        sortby = request.form.get("sort_by")
        
        # print(keyword)
        # print(priceTo)
        # print(priceFrom)
        #print(condition)
        #print(seller)
        # print(shipping)
        #print(sortby)
        # print(check)
        constr=""
        str2=""
        str3=""
        str4=""
        # str0 = ""

        # if(len(priceFrom) == 0):
        #     str0 = 

        if(len(condition)>0):
            constr+="&itemFilter(2).name=Condition"
        
        for i in range(len(condition)):
            constr+="&itemFilter(2).value("+str(i)+")="+condition[i]

        # if(seller==None)://compulsory
        if(len(condition) == 0):
            str2+="&itemFilter(2).name=ReturnsAcceptedOnly&itemFilter(2).value(0)="+check
        else:
            str2+="&itemFilter(3).name=ReturnsAcceptedOnly&itemFilter(3).value(0)="+check

        #compulsory
        if(len(condition)==0):
            str3+="&itemFilter(3).name=FreeShippingOnly&itemFilter(3).value(0)="+freeshipcheck
        else:
            str3+="&itemFilter(4).name=FreeShippingOnly&itemFilter(4).value(0)="+freeshipcheck
        
        if(len(condition)==0):
            if(expshipcheck=="true"):
                str4+="&itemFilter(4).name=ExpeditedShippingType&itemFilter(4).value(0)=Expedited"
        else:
            if(expshipcheck=="true"):
                str4+="&itemFilter(5).name=ExpeditedShippingType&itemFilter(5).value(0)=Expedited"

        #url="https://svcs.ebay.com/services/search/FindingService/v1?OPERATIONNAME=findItemsAdvanced&SERVICE-VERSION=1.0.0&SECURITY-APPNAME=MrunalDe-MrunalAp-PRD-d2eb4905c-3e24c023&RESPONSEDATA-FORMAT=JSON&RESTPAYLOAD&keywords=iphone&paginationInput.entriesPerPage=25&sortOrder=BestMatch&itemFilter(0).name=MaxPrice&itemFilter(0).value=25&itemFilter(0).paramName=Currency&itemFilter(0).paramValue=USD&itemFilter(1).name=MinPrice&itemFilter(1).value=10&itemFilter(1).paramName=Currency&itemFilter(1).paramValue=USD&itemFilter(2).name=ReturnsAcceptedOnly&itemFilter(2).value=false&itemFilter(3).name=Condition&itemFilter(3).value(0)=2000&itemFilter(3).value(1)=3000"
        #url="https://svcs.ebay.com/services/search/FindingService/v1?OPERATION-NAME=findItemsAdvanced&SERVICE-VERSION=1.0.0&SECURITY-APPNAME=MrunalDe-MrunalAp-PRD-d2eb4905c-3e24c023&RESPONSE-DATA-FORMAT=JSON&REST-PAYLOAD&keywords=iphone&paginationInput.entriesPerPage=25&sortOrder=BestMatch&itemFilter(0).name"   
        #url = "https://svcs.ebay.com/services/search/FindingService/v1?OPERATION-NAME=findItemsAdvanced&SERVICE-VERSION=1.0.0&SECURITY-APPNAME=MrunalDe-MrunalAp-PRD-d2eb4905c-3e24c023&RESPONSE-DATA-FORMAT=JSON&REST-PAYLOAD&keywords="+keyword+"&paginationInput.entriesPerPage=25&sortOrder=bestmatch&itemFilter(0).name=MaxPrice&itemFilter(0).value="+priceTo+"&itemFilter(0).paramName=Currency&itemFilter(0).paramValue=USD&itemFilter(1).name=MinPrice&itemFilter(1).value="+priceFrom+"&itemFilter(1).paramName=Currency&itemFilter(1).paramValue=USD&itemFilter(2).name=Condition&itemFilter(2).value(0)=1000&itemFilter(2).value(1)=3000"
        url = "https://svcs.ebay.com/services/search/FindingService/v1?OPERATION-NAME=findItemsAdvanced&SERVICE-VERSION=1.0.0&SECURITY-APPNAME=MrunalDe-MrunalAp-PRD-d2eb4905c-3e24c023&RESPONSE-DATA-FORMAT=JSON&REST-PAYLOAD&keywords="+keyword+"&paginationInput.entriesPerPage=25&sortOrder="+sortby+"&itemFilter(0).name=MaxPrice&itemFilter(0).value="+priceTo+"&itemFilter(0).paramName=Currency&itemFilter(0).paramValue=USD&itemFilter(1).name=MinPrice&itemFilter(1).value="+priceFrom+"&itemFilter(1).paramName=Currency&itemFilter(1).paramValue=USD"+constr+str2+str3+str4     
        print(url)
        url_req=urllib.request.urlopen(url)
        json_obj=json.load(url_req)    
        
     
        rf = json_obj.get("findItemsAdvancedResponse")
        top_image = ""
        imageURL=[]
        item_title = []
        link = []  
        category_name = []
        condition_item=[]
        top_image = []
        current_price =[]
        ship_cost = []
        ret_acc = []
        #print(len(rf))
        for i in range(len(rf)):
            x = rf[i]
        l = x["paginationOutput"]   
        #print("l:"+l)
        searchResult = x["searchResult"]
        #print(len(searchResult))
        item = (searchResult[0]["item"])    
        #print(len(item))
        for i in range(len(item)):
            item1 = item[i]
            iURL = item1["galleryURL"][0]
            imageURL.append(iURL)
        
            item_var = item1["title"][0]
            item_title.append(item_var)
            link_var = item1["viewItemURL"][0]
            link.append(link_var)
            
            ret_acc.append(item1["returnsAccepted"][0] if item1.__contains__("returnsAccepted") else "false")

            item2 = item1["primaryCategory"][0]
            category_name_var  = item2["categoryName"][0]
            category_name.append(category_name_var)
            item3 = item1["condition"][0]
            condition_item_var = item3["conditionDisplayName"][0]
            condition_item.append(condition_item_var)
            top_rated_var = item1["topRatedListing"][0]
            if (top_rated_var == "true"):
                top_image.append("true")
            else:
                top_image.append("false")
            item4 =  item1["sellingStatus"][0]
            curr_price = item4["convertedCurrentPrice"][0]
            current_price_var = float(curr_price["__value__"])
            current_price.append(current_price_var)
            item5 = item1["shippingInfo"][0]
            # ship_cost_var = item5["shippingServiceCost"][0]["__value__"] if item5.__contains__("shippingServiceCost") else 0
            # ship_cost.append(ship_cost_var)
            ship_cost.append(item5)
        
        a = l[0]
        entries = int(a['totalEntries'][0])
        # for i in top_image:
        #     print(i)
        #print(entries)
        #print(imageURL)
        # print(item_title)
        # print(link)
        # print(category_name)
        #print(condition_item)
        # print(top_image)
        print(current_price)
        print(ship_cost)
            
        data={"keyword":keyword,"priceFrom":priceFrom,"priceTo":priceTo,"condition":condition,"seller":seller,"sortby":sortby, "entries":entries, "shipping": shipping, "ret_acc": ret_acc,
                "imageURL": imageURL, "item_title":item_title, "link":link, "category_name":category_name, "condition_item":condition_item, "top_image":top_image, "current_price":current_price, "ship_cost": ship_cost}
        return jsonify(data = data)
    else:
        return (app.send_static_file('ebay.html'))


if __name__ == "__main__":
    app.run()

